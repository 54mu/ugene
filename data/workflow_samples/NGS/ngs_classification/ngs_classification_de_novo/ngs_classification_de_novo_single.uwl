#@UGENE_WORKFLOW



workflow "SE reads assembly and classification"{

    get-se-reads-list {
        type:get-se-reads-list;
        name:"Read NGS SE Reads";
        url1 {
            dataset:"Dataset 1";
        }
    }
    fastqc-before {
        type:fastqc;
        name:"FastQC Before";
    }
    casava-filter {
        type:CASAVAFilter;
        name:"CASAVA Filter";
    }
    cut-adapt {
        type:CutAdaptFastq;
        name:"Cut Adapter";
        adapters-url:"";
    }
    quality-trim {
        type:QualityTrim;
        name:"Trim by Quality";
    }
    fastqc-after {
        type:fastqc;
        name:"FastQC After";
    }
    kraken-classify {
        type:kraken-classify;
        name:Kraken;
        input-data:paired-end;
    }
    spades {
        type:spades-id;
        name:SPAdes;
    }

    .actor-bindings {
        get-se-reads-list.out->fastqc-before.in-file
        get-se-reads-list.out->casava-filter.in-file
        quality-trim.out-file->fastqc-after.in-file
        quality-trim.out-file->spades.in-data
        spades.out-data->kraken-classify.in
        cut-adapt.out-file->quality-trim.in-file
        casava-filter.out-file->cut-adapt.in-file
    }

    get-se-reads-list.reads-url1->fastqc-before.in-file.url
    get-se-reads-list.reads-url1->casava-filter.in-file.url
    casava-filter.url->cut-adapt.in-file.url
    cut-adapt.url->quality-trim.in-file.url
    quality-trim.url->fastqc-after.in-file.url
    spades.scaffolds-out->kraken-classify.in.reads-url1
    quality-trim.url->spades.in-data.readsurl

    .meta {
        visual {
            casava-filter {
                pos:"-584 -645";
                style:simple;
                bg-color-simple:"127 127 127 255";
                in-file.angle:180;
                out-file.angle:360;
            }
            cut-adapt {
                pos:"-390 -645";
                style:simple;
                bg-color-simple:"127 127 127 255";
                in-file.angle:180;
                out-file.angle:360;
            }
            fastqc-after {
                pos:"-72 -541";
                style:simple;
                bg-color-simple:"81 120 78 255";
                in-file.angle:150.803;
            }
            fastqc-before {
                pos:"-668 -545";
                style:simple;
                bg-color-simple:"81 120 78 255";
                in-file.angle:138.366;
            }
            get-se-reads-list {
                pos:"-771 -646";
                style:simple;
                bg-color-simple:"23 106 239 255";
                out.angle:360;
            }
            kraken-classify {
                pos:"-192 -312";
                style:simple;
                bg-color-simple:"0 145 0 255";
                in.angle:90;
                out.angle:268.977;
            }
            quality-trim {
                pos:"-195 -645";
                style:simple;
                bg-color-simple:"127 127 127 255";
                in-file.angle:180;
                out-file.angle:272.437;
            }
            spades {
                pos:"-193 -457";
                style:simple;
                bg-color-simple:"168 50 117 255";
                in-data.angle:90;
                out-data.angle:272.49;
            }
            casava-filter.out-file->cut-adapt.in-file {
                text-pos:"-37.3359 -27";
            }
            cut-adapt.out-file->quality-trim.in-file {
                text-pos:"-37.3359 -27";
            }
            get-se-reads-list.out->casava-filter.in-file {
                text-pos:"-43 -27";
            }
            get-se-reads-list.out->fastqc-before.in-file {
                text-pos:"-29.3359 -10";
            }
            quality-trim.out-file->fastqc-after.in-file {
                text-pos:"-22.3359 -17";
            }
            quality-trim.out-file->spades.in-data {
                text-pos:"-37.3359 -27";
            }
            spades.out-data->kraken-classify.in {
                text-pos:"-37.3359 -14";
            }
        }
        wizard {
            name:"SE Reads Assembly and Classification Wizard";
            page {
                id:1;
                next:2;
                title:"Input data";
                parameters-area {
                    group {
                        title:"Single-end reads";
                        label-size:120;
                        get-se-reads-list.url1 {
                            label:"FASTQ file(s)";
                        }
                    }
                }
            }
            page {
                id:2;
                next:3;
                title:Pre-proccessing;
                parameters-area {
                    group {
                        title:"Reads filtration";
                        label-size:120;
                        quality-trim.qual-id {
                        }
                        quality-trim.len-id {
                            label:"Min length";
                        }
                        quality-trim.both-ends {
                            label:"Trim both ends";
                        }
                        cut-adapt.front-url {
                            label:"5’ adapters";
                        }
                        cut-adapt.adapters-url {
                            label:"3’ adapters";
                        }
                        cut-adapt.anywhere-url {
                            label:"5’ and 3’ adapters";
                        }
                    }
                }
            }
            page {
                id:3;
                next:4;
                title:"SPAdes settings"
                parameters-area {
                    group {
                        title:"Reads de novo assembly"
                        label-size:180;
                        spades.dataset-type {
                        }
                        spades.running-mode {
                        }
                        spades.k-mer {
                        }
                    }
                    group {
                        title:"Memory usage and efficiency";
                        label-size:180;
                        type:hideable;
                        spades.memlimit {
                        }
                        spades.threads {
                        }
                    }
                }
            }
            page {
                id:4;
                next:5;
                title:"Kraken settings";
                parameters-area {
                    group {
                        title:Classification;
                        label-size:180;
                        kraken-classify.database {
                        }
                        kraken-classify.quick-operation {
                        }
                        kraken-classify.min-hits {
                        }
                    }
                    group {
                        title:"Memory usage and efficiency";
                        label-size:180;
                        type:hideable;
                        kraken-classify.preload {
                        }
                        kraken-classify.threads {
                        }
                    }
                }
            }
            page {
                id:5;
                title:"Output data";
                parameters-area {
                    group {
                        title:"Classification output";
                        label-size:180;
                        kraken-classify.output-url {
                            label:"Kraken output file";
                        }
                    }
                }
            }
        }
    }
}

